on: push
name: deploy
jobs:
        deploy:
                name: deploy to server
                runs-on: ubuntu-latest
                steps:
                        - uses: actions/checkout@master
                        - name: build and push to docker
                          uses: docker/build-push-action@v1
                          with:
                                  username: ${{ secrets.DOCKER_USERNAME }}
                                  password: ${{ secrets.DOCKER_PASSWORD }}
                                  repository: ${{ github.repository  }}
                                  tag_with_ref: true
                                  tag_with_sha: true
                                  tags: ${{ github.sha }}
                        
                        

                        - name: work in server 1
                          uses: cross-the-world/ssh-pipeline@master
                          env: 

                                MESSAGE: "working in server 1 ..."     
                                DOCKER_IMAGE: ${{ github.repository }}
                                CONTAINER: ${{ secrets.CONTAINER }}
                                NEW_PORT: ${{ secrets.NEW_PORT  }}
                                DOCKER_IMAGE2: ${{ secrets.DOCKER_IMAGE2 }}
                                CONTAINER2: ${{ secrets.CONTAINER2 }}
                                NEW_PORT2: ${{ secrets.NEW_PORT2  }}

                          with:
                               
                                host: ${{ secrets.MT_HOST }}
                                user: ${{ secrets.MT_USER }}
                                pass: ${{ secrets.MT_PASS }}
                                port: ${{ secrets.MT_PORT }}
                                connect_timeout: 10s
                                script: |
                                  docker pull $DOCKER_IMAGE
                                  docker container ls -aq | xargs --no-run-if-empty docker container rm -f
                                  docker rmi -f $(docker images -a -q)
                                  docker run --name $CONTAINER -d -p $NEW_PORT:80 --restart always $DOCKER_IMAGE                                                                         

                        - name: work in server 2
                          uses: appleboy/ssh-action@master
                          with:
                                
                                host: ${{ secrets.HOST }}
                                username: ${{ secrets.USERNAME }}
                                key: ${{ secrets.PRIVATE_KEY}}
                                script: | 
                                  docker pull ${{ github.repository }}
                                  docker container ls -aq | xargs --no-run-if-empty docker container rm -f
                                  docker rmi -f $(docker images -a -q)
                                  docker run --name ${{ secrets.CONTAINER }} -d -p ${{ secrets.NEW_PORT }}:80 --restart always ${{ github.repository }} &>log.txt
                                  

                        

